{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } // convert non-2xx HTTP responses into errors:\n\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  return Promise.reject(error);\n};\n\nconst baseURL = \"api/students\";\nexport const getAllStudent = () => {\n  return fetch(baseURL).then(checkStatus);\n};\nexport const addNewStudent = student => {\n  return fetch(baseURL, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(student)\n  });\n};\nexport const deleteStudent = studentId => {\n  return fetch(baseURL + studentId, {\n    method: 'DELETE'\n  }).then(checkStatus);\n};","map":{"version":3,"sources":["/Users/aronambesajir/Desktop/Interview_practice/Full-Stack-Project/demo/src/frontend/src/Client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","Promise","reject","baseURL","getAllStudent","then","addNewStudent","student","headers","method","body","JSON","stringify","deleteStudent","studentId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAC9B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH,GAH6B,CAI9B;;;AACA,QAAME,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACA,SAAOK,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CARD;;AASA,MAAMK,OAAO,GAAC,cAAd;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAQV,KAAK,CAACS,OAAD,CAAL,CACHE,IADG,CACEV,WADF,CAAR;AAEH,CAHM;AAIP,OAAO,MAAMW,aAAa,GAACC,OAAO,IAAE;AAChC,SAAOb,KAAK,CAACS,OAAD,EACR;AACIK,IAAAA,OAAO,EAAC;AAAC,sBAAe;AAAhB,KADZ;AAEIC,IAAAA,MAAM,EAAE,MAFZ;AAGIC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAHT,GADQ,CAAZ;AAMH,CAPM;AAQP,OAAO,MAAMM,aAAa,GAAEC,SAAD,IAAa;AACpC,SAAOpB,KAAK,CAACS,OAAO,GAACW,SAAT,EACR;AACIL,IAAAA,MAAM,EAAE;AADZ,GADQ,CAAL,CAGAJ,IAHA,CAGKV,WAHL,CAAP;AAIH,CALM","sourcesContent":["import fetch from 'unfetch';\n\nconst checkStatus = (response) => {\n    if (response.ok) {\n        return response;\n    }\n    // convert non-2xx HTTP responses into errors:\n    const error = new Error(response.statusText);\n    error.response = response;\n    return Promise.reject(error);\n}\nconst baseURL=\"api/students\";\nexport const getAllStudent = () => {\n    return  fetch(baseURL)\n        .then(checkStatus);\n}\nexport const addNewStudent=student=>{\n    return fetch(baseURL,\n        {\n            headers:{'Content-Type':'application/json'},\n            method: 'POST',\n            body:JSON.stringify(student)\n        });\n}\nexport const deleteStudent=(studentId)=>{\n    return fetch(baseURL+studentId,\n        {\n            method: 'DELETE',\n        }).then(checkStatus)\n}"]},"metadata":{},"sourceType":"module"}