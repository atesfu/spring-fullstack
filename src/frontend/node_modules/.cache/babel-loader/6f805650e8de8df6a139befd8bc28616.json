{"ast":null,"code":"import _slicedToArray from\"/Users/aronambesajir/Desktop/Interview_practice/Full-Stack-Project/demo/src/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Drawer,Input,Col,Select,Form,Row,Button,Spin}from'antd';import{addNewStudent}from\"./Client\";import{responseNotification,notficationType}from\"./Notification\";import{LoadingOutlined}from'@ant-design/icons';import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Option=Select.Option;var antIcon=/*#__PURE__*/_jsx(LoadingOutlined,{style:{fontSize:24},spin:true});function StudentDrawerForm(_ref){var showDrawer=_ref.showDrawer,setShowDrawer=_ref.setShowDrawer,fetchStudents=_ref.fetchStudents;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),submitting=_useState2[0],setSubmitting=_useState2[1];var onCLose=function onCLose(){return setShowDrawer(false);};var onFinish=function onFinish(student){setSubmitting(true);console.log(JSON.stringify(student,null,2));addNewStudent(student).then(function(){console.log(\"student added\");onCLose();responseNotification(notficationType.SUCCESS,\"Student Success Added\",\"\".concat(student.name,\" was added to the system\"));fetchStudents();}).catch(function(err){console.log(err);err.response.json().then(function(res){console.log(res);responseNotification(notficationType.ERROR,\"There was an issue\",\"\".concat(res.message,\" [\").concat(res.status,\"] [\").concat(res.error,\"]\"));});}).finally(function(){return setSubmitting(false);});};var onFinishFailed=function onFinishFailed(errorInfo){alert(JSON.stringify(errorInfo,null,2));};return/*#__PURE__*/_jsx(Drawer,{title:\"Create new student\",width:720,onClose:onCLose,visible:showDrawer,bodyStyle:{paddingBottom:80},footer:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'right'},children:/*#__PURE__*/_jsx(Button,{onClick:onCLose,style:{marginRight:8},children:\"Cancel\"})}),children:/*#__PURE__*/_jsxs(Form,{layout:\"vertical\",onFinishFailed:onFinishFailed,onFinish:onFinish,hideRequiredMark:true,children:[/*#__PURE__*/_jsxs(Row,{gutter:16,children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"name\",label:\"Name\",rules:[{required:true,message:'Please enter student name'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Please enter student name\"})})}),/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"email\",label:\"Email\",rules:[{required:true,message:'Please enter student email'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Please enter student email\"})})})]}),/*#__PURE__*/_jsx(Row,{gutter:16,children:/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{name:\"gender\",label:\"gender\",rules:[{required:true,message:'Please select a gender'}],children:/*#__PURE__*/_jsxs(Select,{placeholder:\"Please select a gender\",children:[/*#__PURE__*/_jsx(Option,{value:\"MALE\",children:\"MALE\"}),/*#__PURE__*/_jsx(Option,{value:\"FEMALE\",children:\"FEMALE\"}),/*#__PURE__*/_jsx(Option,{value:\"OTHER\",children:\"OTHER\"})]})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit\"})})})}),/*#__PURE__*/_jsx(Row,{children:submitting&&/*#__PURE__*/_jsx(Spin,{indicator:antIcon})})]})});}export default StudentDrawerForm;","map":{"version":3,"sources":["/Users/aronambesajir/Desktop/Interview_practice/Full-Stack-Project/demo/src/frontend/src/StudentDrawerForm.js"],"names":["Drawer","Input","Col","Select","Form","Row","Button","Spin","addNewStudent","responseNotification","notficationType","LoadingOutlined","useState","Option","antIcon","fontSize","StudentDrawerForm","showDrawer","setShowDrawer","fetchStudents","submitting","setSubmitting","onCLose","onFinish","student","console","log","JSON","stringify","then","SUCCESS","name","catch","err","response","json","res","ERROR","message","status","error","finally","onFinishFailed","errorInfo","alert","paddingBottom","textAlign","marginRight","required"],"mappings":"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","sourcesContent":["import {Drawer, Input, Col, Select, Form, Row, Button, Spin} from 'antd';\n\nimport {addNewStudent} from \"./Client\";\nimport {responseNotification,notficationType} from \"./Notification\";\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {useState} from \"react\";\nconst {Option} = Select;\n\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nfunction StudentDrawerForm({showDrawer, setShowDrawer,fetchStudents}) {\n    const [submitting,setSubmitting]=useState(false);\n    const onCLose = () => setShowDrawer(false);\n\n    const onFinish = student => {\n        setSubmitting(true)\n        console.log(JSON.stringify(student, null, 2));\n        addNewStudent(student)\n            .then(()=>{\n                console.log(\"student added\")\n                onCLose()\n                responseNotification(\n                    notficationType.SUCCESS,\n                    \"Student Success Added\",\n                    `${student.name} was added to the system`\n                    )\n                fetchStudents()\n            })\n            .catch(err=>{\n                console.log(err);\n                err.response.json().then(res => {\n                    console.log(res);\n                    responseNotification(\n                        notficationType.ERROR,\n                        \"There was an issue\",\n                        `${res.message} [${res.status}] [${res.error}]`\n                    )\n                });\n            })\n            .finally(()=>setSubmitting(false))\n    };\n\n    const onFinishFailed = errorInfo => {\n        alert(JSON.stringify(errorInfo, null, 2));\n    };\n\n    return <Drawer\n        title=\"Create new student\"\n        width={720}\n        onClose={onCLose}\n        visible={showDrawer}\n        bodyStyle={{paddingBottom: 80}}\n        footer={\n            <div\n                style={{\n                    textAlign: 'right',\n                }}\n            >\n                <Button onClick={onCLose} style={{marginRight: 8}}>\n                    Cancel\n                </Button>\n            </div>\n        }\n    >\n        <Form layout=\"vertical\"\n              onFinishFailed={onFinishFailed}\n              onFinish={onFinish}\n              hideRequiredMark>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{required: true, message: 'Please enter student name'}]}\n                    >\n                        <Input placeholder=\"Please enter student name\"/>\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[{required: true, message: 'Please enter student email'}]}\n                    >\n                        <Input placeholder=\"Please enter student email\"/>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={16}>\n                <Col span={12}>\n                    <Form.Item\n                        name=\"gender\"\n                        label=\"gender\"\n                        rules={[{required: true, message: 'Please select a gender'}]}\n                    >\n                        <Select placeholder=\"Please select a gender\">\n                            <Option value=\"MALE\">MALE</Option>\n                            <Option value=\"FEMALE\">FEMALE</Option>\n                            <Option value=\"OTHER\">OTHER</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                <Col span={12}>\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row>\n                {submitting && <Spin indicator={antIcon} />}\n            </Row>\n        </Form>\n    </Drawer>\n}\n\nexport default StudentDrawerForm;"]},"metadata":{},"sourceType":"module"}